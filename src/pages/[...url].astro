---
export const prerender = false;

import type { Code } from "astro:components";
import getMatchProps from "../routes/getMatchProps";
const { url } = Astro.params;

const response = await fetch("https://web-poc-astro.vercel.app/api/routing");
const data = (await response.json()) as Record<string, string>;
let page: string | undefined = undefined;

if (typeof url !== "undefined") {
  const regexp = Object.keys(data)
    .map((key) => {
      return `(?<${key}>${data[key]})`;
    })
    .join("|");

  const result = new RegExp(regexp).exec(url);

  if (result === null) {
    return null;
  }

  page = Object.keys(data).find(
    (key) => Boolean(result.groups?.[key]) === true
  );
}

const importDynamically = async (path: string) => {
  const page = await import(path);

  return page.default;
};

let Page;
let props = {};

switch (page) {
  case "match":
    Page = await importDynamically("../routes/match.astro");
    props = await getMatchProps(Astro.params.url);

    if (!props.event || !props.league) {
      return new Response("404", {
        status: 404,
        statusText: "Not Found",
      });
    }
    break;

  case "article":
    Page = await importDynamically("../routes/article.astro");
    break;

  default:
    Page = await importDynamically("../routes/index.astro");
    break;
}
---

<Page {...props} />
